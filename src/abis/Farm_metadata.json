{
  "compiler": {
    "version": "0.7.6+commit.7338295f"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract Token",
            "name": "_token",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_address",
            "type": "address"
          }
        ],
        "name": "FarmCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_address",
            "type": "address"
          }
        ],
        "name": "FarmSynced",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address payable",
            "name": "_charity",
            "type": "address"
          }
        ],
        "name": "createFarm",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getLand",
        "outputs": [
          {
            "components": [
              {
                "internalType": "enum Farm.Fruit",
                "name": "fruit",
                "type": "uint8"
              },
              {
                "internalType": "uint256",
                "name": "createdAt",
                "type": "uint256"
              }
            ],
            "internalType": "struct Farm.Square[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          }
        ],
        "name": "getMarketPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "conversion",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "levelUp",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "enum Farm.Action",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "enum Farm.Fruit",
                "name": "fruit",
                "type": "uint8"
              },
              {
                "internalType": "uint256",
                "name": "landIndex",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "createdAt",
                "type": "uint256"
              }
            ],
            "internalType": "struct Farm.Event[]",
            "name": "_events",
            "type": "tuple[]"
          }
        ],
        "name": "sync",
        "outputs": [
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "enum Farm.Fruit",
                    "name": "fruit",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "createdAt",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct Farm.Square[]",
                "name": "land",
                "type": "tuple[]"
              },
              {
                "internalType": "uint256",
                "name": "balance",
                "type": "uint256"
              }
            ],
            "internalType": "struct Farm.Farm",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/Farm.sol": "Farm"
    },
    "evmVersion": "istanbul",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": []
  },
  "sources": {
    "contracts/Farm.sol": {
      "keccak256": "0xfb7b4687da820cdc86ecbc9015d935845559db9174fdd604ae9e2a9078f90876",
      "urls": [
        "bzz-raw://22bbf44c04561f520a0d7d25077d3060bb5de75c4fc74f98ec9febf08470129e",
        "dweb:/ipfs/QmUDPQct2GqEdBBYioo7VgaUoWTSfPJD6SVKHgsS1eJsQ5"
      ]
    },
    "contracts/Token.sol": {
      "keccak256": "0x71e61634d464aa91ba6610d7578c37a158cabedf839b994eac66d6c22554a74c",
      "license": "MIT",
      "urls": [
        "bzz-raw://6be35ce35f0b36be96ace199ed5c6883db3a106e11f4187004a82ae137eb1e91",
        "dweb:/ipfs/QmbwdBy1s5AkCjPRrTCcsnkPsgw64UKohN6qzp3GbdsmFY"
      ]
    },
    "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol": {
      "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
      "license": "MIT",
      "urls": [
        "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
        "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
      ]
    },
    "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/Math.sol": {
      "keccak256": "0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c",
      "license": "MIT",
      "urls": [
        "bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521",
        "dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE"
      ]
    },
    "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol": {
      "keccak256": "0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6",
      "license": "MIT",
      "urls": [
        "bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe",
        "dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3"
      ]
    },
    "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/token/ERC20/ERC20.sol": {
      "keccak256": "0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538",
      "license": "MIT",
      "urls": [
        "bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca",
        "dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR"
      ]
    },
    "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/token/ERC20/ERC20Burnable.sol": {
      "keccak256": "0x20569e5d91a1f7478f4579962d35b35e5c68e10c5718696e3863c1a588da87c4",
      "license": "MIT",
      "urls": [
        "bzz-raw://5ace7d16e99eb77a33c3680964706a39ca6c91aebd4f911f4b70430881cc85b8",
        "dweb:/ipfs/Qmb7g4vz3x238NMF9US6q8xUUamDy9upxZnms6ZaKkN37U"
      ]
    },
    "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
        "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
      ]
    }
  },
  "version": 1
}
